<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KI3/D0yOUOC5J5VdAAAAAElFTkSuQmCC
</value>
  </data>
</root>